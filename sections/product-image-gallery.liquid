
{% schema %}
  {
    "name": "Product Image Gallery",
    "settings": [
    ],
    "presets": [
      {
        "name": "Product Image Gallery",
        "category": "Product"
      }
    ]
  }
  {% endschema %}
  
  {% liquid 
    assign variant_images = product.images | where: 'attached_to_variant?', true | map: 'src' 
  %}
  
  <div class="product-gallery 
    product-gallery--{{ section.settings.gallery_layout }}" 
    data-section-id="{{ section.id }}"
  >
      <div class="product-gallery__images-container">
        <div class="product-gallery__images product__media-wrapper">
          {% render 'product-media-gallery', 
            variant_images: variant_images, 
            section_settings: section.settings 
          %}
        </div>
      </div>
  </div>
  
  {% stylesheet %}
  
  .product-gallery__images {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: 10px;
  }
  {% endstylesheet %}
  
  {% javascript %}
  document.addEventListener('DOMContentLoaded', function() {
    const gallery = document.querySelector('.product-gallery__images');
    const paginationDots = document.querySelectorAll('.product-gallery__pagination-dot');
    
    if (paginationDots.length > 0) {
      paginationDots.forEach((dot, index) => {
        dot.addEventListener('click', () => {
          // Remove active class from all dots
          paginationDots.forEach(d => d.classList.remove('active'));
          
          // Add active class to clicked dot
          dot.classList.add('active');
          
          // Move gallery to selected image
          gallery.style.transform = `translateX(-${index * 100}%)`;
        });
      });
    }
  
    // Zoom functionality
    {% if section.settings.enable_zoom %}
      const zoomContainers = document.querySelectorAll('.product-gallery__image-wrapper');
      
      zoomContainers.forEach(container => {
        const image = container.querySelector('img');
        
        container.addEventListener('mousemove', function(e) {
          const rect = container.getBoundingClientRect();
          const x = (e.clientX - rect.left) / rect.width * 100;
          const y = (e.clientY - rect.top) / rect.height * 100;
          
          image.style.transformOrigin = `${x}% ${y}%`;
          image.style.transform = 'scale(1.5)';
        });
        
        container.addEventListener('mouseleave', function() {
          image.style.transform = 'scale(1)';
        });
      });
    {% endif %}
  });
  {% endjavascript %}