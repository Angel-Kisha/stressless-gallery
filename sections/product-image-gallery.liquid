{% schema %}
  {
    "name": "Product Image Gallery",
    "settings": [
      {
        "type": "select",
        "id": "image_fit",
        "label": "Image Fit",
        "options": [
          {
            "value": "cover",
            "label": "Cover"
          },
          {
            "value": "contain",
            "label": "Contain"
          }
        ],
        "default": "cover"
      },
      {
        "type": "range",
        "id": "image_height",
        "min": 200,
        "max": 800,
        "step": 50,
        "unit": "px",
        "label": "Image Height",
        "default": 500
      },
      {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 5,
        "unit": "px",
        "label": "Padding Top",
        "default": 20
      },
      {
        "type": "range",
        "id": "padding_bottom",
        "min": 0,
        "max": 100,
        "step": 5,
        "unit": "px",
        "label": "Padding Bottom",
        "default": 20
      },
      {
        "type": "range",
        "id": "padding_left",
        "min": 0,
        "max": 100,
        "step": 5,
        "unit": "px",
        "label": "Padding Left",
        "default": 20
      },
      {
        "type": "range",
        "id": "padding_right",
        "min": 0,
        "max": 100,
        "step": 5,
        "unit": "px",
        "label": "Padding Right",
        "default": 20
      },
      {
        "type": "color",
        "id": "background_color",
        "label": "Background Color",
        "default": "#ffffff"
      }
    ],
    "presets": [
      {
        "name": "Product Image Gallery",
        "category": "Product"
      }
    ]
  }
  {% endschema %}
  
  <div class="product-media-gallery" style="background-color: {{ section.settings.background_color }}; padding: {{ section.settings.padding_top }}px {{ section.settings.padding_right }}px {{ section.settings.padding_bottom }}px {{ section.settings.padding_left }}px;">
    <div class="slider-wrapper">
      <button class="slider-button slider-button--prev" aria-label="Previous">&#9664;</button>
      <div class="slider-container">
        <div id="ProductMediaSlider" class="product-media-grid">
          {%- for media in product.images -%}
            <div class="product-media-item">
              {{ media | image_url: width: 1000 | image_tag: loading: 'lazy', class: 'product-media-image', alt: media.alt | escape }}
            </div>
          {%- endfor -%}
        </div>
      </div>
      <button class="slider-button slider-button--next" aria-label="Next">&#9654;</button>
    </div>
  </div>
  
  <style>
    .product-media-gallery {
      position: relative;
      width: 100%;
      overflow: hidden;
    }
  
    .slider-wrapper {
      display: flex;
      align-items: center;
      width: 100%;
      overflow: hidden;
    }
  
    .slider-container {
      width: 100%;
      overflow: hidden;
    }
  
    .product-media-grid {
      display: flex;
      transition: transform 0.5s ease-in-out;
    }
  
    .product-media-item {
      flex: 0 0 33.33%;
      max-width: 33.33%;
    }
  
    .product-media-image {
      width: 100%;
      height: {{ section.settings.image_height }}px;
      object-fit: {{ section.settings.image_fit }};
    }
  
    .slider-button {
      background: none;
      border: none;
      cursor: pointer;
      font-size: 24px;
      padding: 10px;
    }
  
    .slider-button:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }
  </style>
  
  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const slider = document.getElementById("ProductMediaSlider");
      const prevButton = document.querySelector(".slider-button--prev");
      const nextButton = document.querySelector(".slider-button--next");
      const items = document.querySelectorAll(".product-media-item");
      const visibleSlides = 3;
      let currentIndex = 0;
      let maxIndex = items.length - visibleSlides;
  
      function updateSlider() {
        const translateX = -currentIndex * (items[0].offsetWidth);
        slider.style.transform = `translateX(${translateX}px)`;
        prevButton.disabled = currentIndex === 0;
        nextButton.disabled = currentIndex >= maxIndex;
      }
  
      nextButton.addEventListener("click", function () {
        if (currentIndex < maxIndex) {
          currentIndex++;
          updateSlider();
        }
      });
  
      prevButton.addEventListener("click", function () {
        if (currentIndex > 0) {
          currentIndex--;
          updateSlider();
        }
      });
  
      updateSlider();
    });
  </script>
  