{% comment %}
  Renders product variant-picker

  Accepts:
  - product: {Object} product object.
  - block: {Object} passing the block information.
  - product_form_id: {String} Id of the product form to which the variant picker is associated.
  Usage:
  {% render 'product-variant-picker', product: product, block: block, product_form_id: product_form_id %}
{% endcomment %}
{%- unless product.has_only_default_variant -%}
  <!-- Keep your existing variant-selects code here -->
  <variant-selects id="variant-selects-{{ section.id }}" data-section="{{ section.id }}" {{ block.shopify_attributes }}>
    <!-- Your existing variant options code -->
    
    <!-- When you reach the deselect button part, use this markup: -->
    <div class="product-form__input product-form__input--dropdown product-label-dropdown">
      <label class="w-30 form__label product-label-dropdown-text" for="Option-{{ section.id }}-{{ forloop.index0 }}">
        {{ option.name }}
      </label>
      <div class="select w-55">
        <!-- Your existing select element -->
        <select
          id="Option-{{ section.id }}-{{ forloop.index0 }}"
          class="select__select please-select-enabled variant-select-{{ forloop.index0 }}"
          name="options[{{ option.name | escape }}]"
          form="{{ product_form_id }}"
          data-option-index="{{ forloop.index0 }}"
        >
          <!-- Your option rendering -->
        </select>
        <span class="svg-wrapper">
          {{- 'icon-caret.svg' | inline_asset_content -}}
        </span>
      </div>
      <div class="divider"></div>
      <div class="w-15">
        <button type="button" class="deselect-button deselect-button-{{ forloop.index0 }}" disabled>選択解除</button>
      </div>
    </div>
    <!-- End of the modified part -->
    
  </variant-selects>

  <!-- Add this completely separate script that focuses solely on the deselect functionality -->
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Wait for a short delay to ensure all elements are loaded
      setTimeout(function() {
        // Set up each deselect button independently
        const variantSelects = document.querySelectorAll('.select__select');
        
        variantSelects.forEach(function(select, index) {
          const deselectButton = document.querySelector(`.deselect-button-${index}`);
          
          if (select && deselectButton) {
            // Set initial state
            updateDeselectButtonState(select, deselectButton);
            
            // Add event listener to the select element
            select.addEventListener('change', function() {
              updateDeselectButtonState(this, deselectButton);
            });
            
            // Add event listener to the deselect button
            deselectButton.addEventListener('click', function() {
              // Set selection back to first option
              select.selectedIndex = 0;
              
              // Update button state
              this.disabled = true;
              
              // Trigger change event
              const event = new Event('change', { bubbles: true });
              select.dispatchEvent(event);
            });
          }
        });
        
        // Also set up a mutation observer to watch for changes to the variant selects
        const variantSelectsContainer = document.querySelector('variant-selects');
        if (variantSelectsContainer) {
          const observer = new MutationObserver(function() {
            variantSelects.forEach(function(select, index) {
              const deselectButton = document.querySelector(`.deselect-button-${index}`);
              if (select && deselectButton) {
                updateDeselectButtonState(select, deselectButton);
              }
            });
          });
          
          observer.observe(variantSelectsContainer, { 
            childList: true, 
            subtree: true, 
            attributes: true 
          });
        }
      }, 500);
    });
    
    // Helper function to update deselect button state
    function updateDeselectButtonState(select, button) {
      button.disabled = (select.selectedIndex === 0);
    }
  </script>
{%- endunless -%}