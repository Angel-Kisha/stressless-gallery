{% comment %}
  Renders product variant-picker with "Please select" default option

  Accepts:
  - product: {Object} product object.
  - block: {Object} passing the block information.
  - product_form_id: {String} Id of the product form to which the variant picker is associated.
  Usage:
  {% render 'product-variant-picker', product: product, block: block, product_form_id: product_form_id %}
{% endcomment %}
{%- unless product.has_only_default_variant -%}
  <variant-selects
    id="variant-selects-{{ section.id }}"
    data-section="{{ section.id }}"
    {{ block.shopify_attributes }}
  >
    {%- for option in product.options_with_values -%}
      {%- liquid
        assign swatch_count = option.values | map: 'swatch' | compact | size
        assign picker_type = block.settings.picker_type

        if swatch_count > 0 and block.settings.swatch_shape != 'none'
          if block.settings.picker_type == 'dropdown'
            assign picker_type = 'swatch_dropdown'
          else
            assign picker_type = 'swatch'
          endif
        endif
      -%}
      {%- if picker_type == 'swatch' -%}
        <fieldset class="js product-form__input product-form__input--swatch">
          <legend class="form__label">
            {{ option.name }}:
            <span data-selected-value>
              {{- option.selected_value -}}
            </span>
          </legend>
          {% render 'product-variant-options',
            product: product,
            option: option,
            block: block,
            picker_type: picker_type
          %}
        </fieldset>
      {%- elsif picker_type == 'button' -%}
        <fieldset class="js product-form__input product-form__input--pill">
          <legend class="form__label">{{ option.name }}</legend>
          {% render 'product-variant-options',
            product: product,
            option: option,
            block: block,
            picker_type: picker_type
          %}
        </fieldset>
      {%- else -%}
        <div class="product-form__input product-form__input--dropdown product-label-dropdown">
          <label class="w-30 form__label product-label-dropdown-text" for="Option-{{ section.id }}-{{ forloop.index0 }}">
            {{ option.name }}
          </label>
          <div class="select w-55">
            {%- if picker_type == 'swatch_dropdown' -%}
              <span
                data-selected-value
                class="dropdown-swatch"
              >
                {% render 'swatch', swatch: option.selected_value.swatch, shape: block.settings.swatch_shape %}
              </span>
            {%- endif -%}
            <select
              id="Option-{{ section.id }}-{{ forloop.index0 }}"
              class="select__select"
              name="options[{{ option.name | escape }}]"
              form="{{ product_form_id }}"
              data-option-index="{{ forloop.index0 }}"
            >
              <!-- Add the "Please select" default option -->
              <option value="" selected>Please select</option>
              
              {% render 'product-variant-options',
                product: product,
                option: option,
                block: block,
                picker_type: picker_type
              %}
            </select>
            <span class="svg-wrapper">
              {{- 'icon-caret.svg' | inline_asset_content -}}
            </span>
          </div>
          <div class="divider"></div>
          <div class="w-15">
            <button class="deselect-button">選択解除</button>
          </div>
        </div>
      {%- endif -%}
    {%- endfor -%}

    <script type="application/json" data-selected-variant>
      {{ product.selected_or_first_available_variant | json }}
    </script>
  </variant-selects>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Handle price range display when "Please select" is active
      function updatePriceDisplay() {
        const selects = document.querySelectorAll('variant-selects select');
        const hasEmptySelection = Array.from(selects).some(select => select.value === '');
        const priceContainer = document.querySelector('#price-{{ section.id }}');
        
        if (hasEmptySelection && priceContainer) {
          // Calculate min and max prices from all variants
          {% assign min_price = product.price_min | money %}
          {% assign max_price = product.price_max | money %}
          
          // Only show range if there's actually a range
          if ({{ product.price_min }} < {{ product.price_max }}) {
            priceContainer.querySelector('.price').innerHTML = 
              '<span class="price-item price-item--regular">' + 
              '{{ min_price }} - {{ max_price }}' + 
              '</span>';
          }
        }
      }
      
      // Initialize price display
      updatePriceDisplay();
      
      // Add event listeners to all variant selects
      document.querySelectorAll('variant-selects select').forEach(select => {
        select.addEventListener('change', updatePriceDisplay);
      });
      
      // Make deselect buttons work with "Please select" option
      document.querySelectorAll('.deselect-button').forEach((button, index) => {
        button.addEventListener('click', function(e) {
          e.preventDefault();
          const select = document.querySelector(`select[data-option-index="${index}"]`);
          if (select) {
            select.value = "";
            select.dispatchEvent(new Event('change'));
          }
        });
      });
    });
  </script>
{%- endunless -%}